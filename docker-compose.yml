version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_BACKEND_URL=${BACKEND_URL}
    depends_on:
      - backend
    networks:
      - app_network
    restart: unless-stopped
    stdin_open: true
    tty: true

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${PORT}:${PORT}"
    environment:
      - NODE_ENV=${NODE_ENV}
      - BACKEND_URL=${BACKEND_URL}
      - FRONTEND_URL=${FRONTEND_URL}
      - PROXY_PORT=${PROXY_PORT}
      - PORT=${PORT}
      - DB_DIALECT=${DB_DIALECT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - REDIS_URI=${REDIS_URI}
      - USER_LIMIT=${USER_LIMIT}
      - CONNECTIONS_LIMIT=${CONNECTIONS_LIMIT}
      - CLOSED_SEND_BY_ME=${CLOSED_SEND_BY_ME}
    depends_on:
      - db_postgres
      - cache
    networks:
      - app_network
    restart: unless-stopped

  cache:
    image: redis:latest
    restart: always
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    environment:
      - REDIS_PASSWORD=${REDIS_PASS}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DATABASES=${REDIS_DBS}
    command: redis-server --requirepass ${REDIS_PASS}
    networks:
      - app_network
    volumes:
      - redis_data:/data

  db_postgres:
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - app_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - html:/var/www/html   
    networks:
      - app_network
    command: nginx -g "daemon off;"


networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: 